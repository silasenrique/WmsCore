using Microsoft.AspNetCore.Mvc;
using Wms.Core.Application.Abstractions;
using Wms.Core.Application.DTO;
using Wms.Core.Application.Services;
using Wms.Core.Domain.Entities;

namespace Wms.Core.API.Controllers;

[Route("api/product")]
public class ProductController : MainController
{
    private readonly IProductService _productService;

    public ProductController(IProductService productService)
    {
        _productService = productService;
    }

    [HttpPost]
    public async Task<ActionResult<Product>> Add(Product product)
    {
        var newProduct = await _productService.Add(product);

        return newProduct.Match(
            newProduct => Created(nameof(Add), newProduct),
            errors => Problem(errors));
    }

    [HttpGet]
    public async Task<ActionResult<List<Product>>> Get([FromQuery] ProductQueryDto queryParams)
    {
        var products = await _productService.GetByParams(queryParams);

        return Ok(products);
    }

    [HttpDelete]
    public async Task<ActionResult> Delete(string owner, string code)
    {
        await _productService.Delete(owner, code);

        return NoContent();
    }

    [HttpPut]
    public async Task<ActionResult<Product>> Update(Product product)
    {
        var updatedProduct = await _productService.Update(product);

        return updatedProduct.Match(
            updatedProduct => Ok(updatedProduct),
            errors => Problem(errors)
        );
    }
}